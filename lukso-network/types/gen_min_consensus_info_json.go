// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

// MarshalJSON marshals as JSON.
//func (m MinConsensusInfoEvent) MarshalJSON() ([]byte, error) {
//	type MinConsensusInfoEvent struct {
//		Epoch            types.Epoch `json:"epoch"`
//		ValidatorList    []string    `json:"validatorList"`
//		EpochStartTime   uint64      `json:"epochTimeStart"`
//		SlotTimeDuration uint64      `json:"slotTimeDuration"`
//	}
//	var enc MinConsensusInfoEvent
//	enc.Epoch = m.Epoch
//	enc.ValidatorList = m.ValidatorList
//	enc.EpochStartTime = m.EpochStartTime
//	enc.SlotTimeDuration = m.SlotTimeDuration
//	return json.Marshal(&enc)
//}
//
//// UnmarshalJSON unmarshals from JSON.
//func (m *MinConsensusInfoEvent) UnmarshalJSON(input []byte) error {
//	type MinConsensusInfoEvent struct {
//		Epoch            *types.Epoch `json:"epoch"`
//		ValidatorList    []string     `json:"validatorList"`
//		EpochStartTime   *uint64      `json:"epochTimeStart"`
//		SlotTimeDuration *uint64      `json:"slotTimeDuration"`
//	}
//	var dec MinConsensusInfoEvent
//	if err := json.Unmarshal(input, &dec); err != nil {
//		return err
//	}
//	if dec.Epoch != nil {
//		m.Epoch = *dec.Epoch
//	}
//	if dec.ValidatorList != nil {
//		m.ValidatorList = dec.ValidatorList
//	}
//	if dec.EpochStartTime != nil {
//		m.EpochStartTime = *dec.EpochStartTime
//	}
//	if dec.SlotTimeDuration != nil {
//		m.SlotTimeDuration = *dec.SlotTimeDuration
//	}
//	return nil
//}
